<?xml version="1.0" ?>
<!DOCTYPE modification [
<!ENTITY adminFolder "admin">
<!ENTITY themeFolder "default">
]>
<modification>
	<id>Physical Products Module for Digital Multiseller Marketplace</id>
	<version>4.3</version>
	<author>HAL9000</author>
	
	<!-- ************************** -->
	<!-- ************************** -->
	<!-- __________________________ -->
	<!-- |       BACK OFFICE      | -->
	<!-- __________________________ -->
	<!-- ************************** -->
	<!-- ************************** -->
	
	<!-- ************************* -->
	<!-- * Add the language file * -->
	<!-- ************************* -->
	
	<!-- * Edit controller file * -->
	<file name="&adminFolder;/controller/multiseller/base.php">
		<operation>
			<search position="after"><![CDATA[
				$this->data = array_merge($this->data, $this->load->language('multiseller/multiseller'));
			]]></search>
			<add><![CDATA[
				$this->data = array_merge($this->data, $this->load->language('multiseller/multiseller_physical'));
			]]></add>
		</operation>
	</file>
	
	<!-- **************************************************************** -->
	<!-- * Add the shipping method submenu to multiseller menu in admin * -->
	<!-- **************************************************************** -->
	
	<!-- * Edit controller file * -->
	<file name="&adminFolder;/controller/common/header.php">
		<operation>
			<search position="after"><![CDATA[
				protected function index() {
			]]></search>
			<add><![CDATA[
				$this->data = array_merge($this->data, $this->load->language('multiseller/multiseller_physical'));
			]]></add>
		</operation>
	
		<operation>
			<search position="before"><![CDATA[
				$this->data['stores'] = array();
			]]></search>
			<add><![CDATA[
				$this->data['ms_link_shipping_methods'] = $this->url->link('multiseller/shipping-method', 'token=' . $this->session->data['token'], 'SSL');
			]]></add>
		</operation>
	</file>
	
	<!-- * Edit view file * -->
	<file name="&adminFolder;/view/template/common/header.tpl">
		<operation>
			<search position="after"><![CDATA[
				<li><a href="<?php echo $ms_link_comments; ?>"><?php echo $ms_menu_comments; ?></a></li>
			]]></search>
			<add><![CDATA[
				<li><a href="<?php echo $ms_link_shipping_methods; ?>"><?php echo $ms_menu_shipping_methods; ?></a></li>
			]]></add>
		</operation>
	</file>
	
	<!-- ************************** -->
	<!-- ************************** -->
	<!-- __________________________ -->
	<!-- |      FRONT OFFICE      | -->
	<!-- __________________________ -->
	<!-- ************************** -->
	<!-- ************************** -->
	
	<!-- ********************************************************* -->
	<!-- * Remove the guest checkout until it is not implemented * -->
	<!-- ********************************************************* -->
	
	<!-- * Edit view file * -->
	<!--<file name="catalog/view/theme/&themeFolder;/template/checkout/login.tpl">
		<operation error="log">
			<search position="replace"><![CDATA[
				<?php if ($guest_checkout) { ?>
			]]></search>
			<add><![CDATA[
				<?php if (0) { ?>
			]]></add>
		</operation>
	</file>-->
	
	<!-- ****************************************************** -->
	<!-- * Add a Shipping Settings menu in My Account section * -->
	<!-- ****************************************************** -->
	
	<!-- * Add language file to the header * -->
	<file name="catalog/controller/common/header.php">
		<operation error="log">
			<search position="after"><![CDATA[
				protected function index() {
			]]></search>
			<add><![CDATA[
				$this->data = array_merge($this->data, $this->load->language('multiseller/multiseller_physical'));
			]]></add>
		</operation>
	</file>
	
	<!-- * Add Shipping Settings link in the controller * -->
	<file name="catalog/controller/account/account.php">
		<operation>
			<search position="before"><![CDATA[
				$this->response->setOutput($this->render());
			]]></search>
			<add><![CDATA[
				$this->data = array_merge($this->data, $this->load->language('multiseller/multiseller_physical'));
				$this->data['ms_link_shipping_settings'] = $this->url->link('seller/account-shipping-settings', '', 'SSL');
			]]></add>
		</operation>
	</file>
	
	<!-- * Add Shipping Settings link in the view file * -->
	<file name="catalog/view/theme/&themeFolder;/template/account/account.tpl">
		<operation>
			<search position="after" offset="2"><![CDATA[
				<?php echo $ms_account_products; ?>
			]]></search>
			<add><![CDATA[
				<?php if ($this->config->get('msconf_enable_shipping') > 0) { ?>
				<li>
					<a href="<?php echo $ms_link_shipping_settings; ?>">
						<?php if($this->config->get('msconf_graphical_sellermenu')) { ?>
							<img src="catalog/view/theme/<?php echo $this->config->get('config_template'); ?>/image/ms-woodbox-96.png" />
						<?php } ?>
						<?php echo $ms_account_shipping_settings; ?>
					</a>
				</li>
				<?php } ?>
			]]></add>
		</operation>
	</file>
	
	<!-- * Add Shipping Settings link in the controller for sidebar * -->
	<file name="catalog/controller/module/account.php">
		<operation>
			<search position="before"><![CDATA[
				$this->render();
			]]></search>
			<add><![CDATA[
				$this->data = array_merge($this->data, $this->load->language('multiseller/multiseller_physical'));
				$this->data['ms_link_shipping_settings'] = $this->url->link('seller/account-shipping-settings', '', 'SSL');
			]]></add>
		</operation>
	</file>
	
	<!-- * Add Shipping Settings link to the sidebar * -->
	<file name="catalog/view/theme/&themeFolder;/template/module/account.tpl">
		<operation>
			<search position="after"><![CDATA[
				<li><a href="<?php echo $this->url->link('seller/account-product', '', 'SSL'); ?>"><?php echo $ms_account_products; ?></a></li>
			]]></search>
			<add><![CDATA[
				<?php if ($this->config->get('msconf_enable_shipping') > 0) { ?>
					<li><a href="<?php echo $ms_link_shipping_settings; ?>"><?php echo $ms_account_shipping_settings; ?></a></li>
				<?php } ?>
			]]></add>
		</operation>
	</file>
	
	<!-- ********************************************************************* -->
	<!-- * Add message about combined shipping of seller to the product page * -->
	<!-- ********************************************************************* -->
	
	<!-- * Edit view file * -->
	<file name="catalog/view/theme/&themeFolder;/template/product/product.tpl">
		<operation>
			<search position="after"><![CDATA[
				<p><b><?php echo $ms_catalog_seller_profile_totalproducts; ?></b> <?php echo $seller['total_products']; ?></p>
			]]></search>
			<add><![CDATA[
			    <?php if ($seller['shipping_type'] == MsShipping::SHIPPING_TYPE_COMBINABLE) { ?>
					<p><b><?php echo $ms_seller_combinable_shipping; ?></b></p>
				<?php } ?>
			]]></add>
		</operation>
	</file>
	
	<!-- * Edit controller file * -->
	<file name="catalog/controller/product/product.php">
		<operation>
			<search position="after"><![CDATA[
				$this->data = array_merge($this->data, $this->load->language('multiseller/multiseller'));
			]]></search>
			<add><![CDATA[
				$this->data = array_merge($this->data, $this->load->language('multiseller/multiseller_physical'));
			]]></add>
		</operation>
		
		<operation>
			<search position="after"><![CDATA[
				$this->data['seller']['nickname'] = $seller['ms.nickname'];
			]]></search>
			<add><![CDATA[
				$this->data['seller']['shipping_type'] = $seller['ms.shipping_type'];
			]]></add>
		</operation>
	</file>
	
	<!-- ************************************************ -->
	<!-- * Add info whether product is digital/tangible * -->
	<!-- ************************************************ -->
	
	<!-- * Edit view file * -->
	<file name="catalog/view/theme/&themeFolder;/template/product/product.tpl">
		<operation>
			<search position="after" offset="1"><![CDATA[
				<div class="minimum"><?php echo $text_minimum; ?></div>
			]]></search>
			<add><![CDATA[
				</br>
			    <?php if ($shippable) { ?>
					<p><b><?php echo $ms_shippable_product; ?></b></p>
				<?php } else { ?>
					<p><b><?php echo $ms_digital_product; ?></b></p>
				<?php } ?>
			]]></add>
		</operation>
	</file>
	
	<!-- ************************************ -->
	<!-- * Show where product is shipped to * -->
	<!-- ************************************ -->
	
	<!-- * Edit view file * -->
	<file name="catalog/view/theme/&themeFolder;/template/product/product.tpl">
		<operation>
			<search position="after" offset="8"><![CDATA[
				<div class="minimum"><?php echo $text_minimum; ?></div>
			]]></search>
			<add><![CDATA[
				<?php if ( ($shippable) && (isset($seller) && !empty($seller)) ) { ?>
					<p><b><?php echo $ms_shipping_to; ?></b></p>
				<?php } ?>
			]]></add>
		</operation>
	</file>
	
	<!-- * Edit controller file * -->
	<file name="catalog/controller/product/product.php">
		<operation>
			<search position="after"><![CDATA[
				$this->load->model('catalog/review');
			]]></search>
			<add><![CDATA[
				if (isset($seller) && !empty($seller)) {
					$geo_zones = implode( ", " , $this->MsLoader->MsShipping->getShippingGeoZones($seller['ms.shipping_type'], $product_id, $seller_id) );
					$this->data['ms_shipping_to'] = sprintf($this->language->get('ms_shipping_destinations'), $geo_zones);
				}
			]]></add>
		</operation>
	</file>
	
	<!-- ******************************************************** -->
	<!-- * Add shipping cost estimation tab to the product page * -->
	<!-- ******************************************************** -->
	
	<!-- * Edit view file * -->
	<file name="catalog/view/theme/&themeFolder;/template/product/product.tpl">
		<operation>
			<search position="before" offset="1"><![CDATA[
				<div id="tab-description" class="tab-content"><?php echo $description; ?></div>
			]]></search>
			<add><![CDATA[
				<?php if ($this->config->get('msconf_product_shipping_cost_estimation') && $shippable && $is_seller) { ?>
					<a href="#tab-shipping-estimation"><?php echo $ms_tab_shipping_estimation ?></a>
				<?php } ?>
			]]></add>
		</operation>
		
		<operation>
			<search position="before"><![CDATA[
				<?php if ($tags) { ?>
			]]></search>
			<add><![CDATA[
				<?php if ($this->config->get('msconf_product_shipping_cost_estimation') && $shippable && $is_seller) { ?>
  				<div id="tab-shipping-estimation" class="tab-content">
					<label for="shipping_geo_zone"><?php echo $ms_select_geo_zone; ?></label>
					<select id="shipping_geo_zone" name="shipping_geo_zone">
						<?php foreach ($geo_zones as $geo_zone) { ?>
							<option value="<?php echo $geo_zone['geo_zone_id']; ?>"><?php echo $geo_zone['name']; ?></option>
						<?php } ?>
					</select>
					<a id="button_get_rates" class="button"><?php echo $ms_button_get_rates; ?></a>
					<div class="shipping_methods"></div>
  				</div>
				<?php } ?>
			]]></add>
		</operation>
		
		<operation>
			<search position="before"><![CDATA[
				<?php echo $footer; ?>
			]]></search>
			<add><![CDATA[
				<script type="text/javascript"><!--
					var shipping_estimate_product_id = <?php echo $product_id; ?>;
				//--></script>
			]]></add>
		</operation>
	</file>
	
	<!-- * Edit model file * -->
	<file name="catalog/model/catalog/product.php">
		<operation>
			<search position="after"><![CDATA[
			    'product_id'       => $query->row['product_id'],
			]]></search>
			<add><![CDATA[
				'shipping'         => $query->row['shipping'],
			]]></add>
		</operation>
	</file>
	
	<!-- * Edit controller file * -->
	<file name="catalog/controller/product/product.php">
		<operation>
			<search position="before"><![CDATA[
			    $this->data['heading_title'] = $product_info['name'];
			]]></search>
			<add><![CDATA[
				$this->data['shippable'] = $product_info['shipping'];
				$this->data['is_seller'] = $this->MsLoader->MsProduct->getSellerId($product_id);
			]]></add>
		</operation>
	
		<operation>
			<search position="before"><![CDATA[
			    $this->data['tab_related'] = $this->language->get('tab_related');
			]]></search>
			<add><![CDATA[
				if ($this->config->get('msconf_product_shipping_cost_estimation')) {
					$this->data['geo_zones'] = $this->MsLoader->MsShipping->getGeoZones();
					$this->document->addScript('catalog/view/javascript/shipping-estimation.js');
				}
			]]></add>
		</operation>
	</file>
	
	<!-- ****************************************************** -->
	<!-- * Change/remove the estimate shipping costs function * -->
	<!-- ****************************************************** -->
	
	<!-- * Edit view file * -->
	<file name="catalog/view/theme/&themeFolder;/template/checkout/cart.tpl">
		<operation>
			<search position="before" offset="2"><![CDATA[
				<td><?php if ($next == 'shipping') { ?>
			]]></search>
			<add><![CDATA[
				<?php /* ?>
			]]></add>
		</operation>
		
		<operation>
			<search position="after" offset="2"><![CDATA[
				<td><label for="shipping_estimate"><?php echo $text_shipping_estimate; ?></label></td>
			]]></search>
			<add><![CDATA[
				<?php */ ?>
			]]></add>
		</operation>
	</file>
	
	<!-- * Edit view file * -->
	<!--<file name="catalog/view/theme/&themeFolder;/template/checkout/cart.tpl">

	</file>-->
	
	<!-- **************************************************** -->
	<!-- * Remove useless shipping totals from the minicart * -->
	<!-- **************************************************** -->
	
	<!-- * Edit controller file * -->
	<file name="catalog/controller/module/cart.php">
		<operation>
			<search position="after"><![CDATA[
				foreach ($results as $result) {
			]]></search>
			<add><![CDATA[
				if ($result['code'] != "ms_shipping") {
			]]></add>
		</operation>
		
		<operation>
			<search position="after"><![CDATA[
				array_multisort($sort_order, SORT_ASC, $total_data);
			]]></search>
			<add><![CDATA[
				}
			]]></add>
		</operation>
	</file>
	
	<!-- ************************************************** -->
	<!-- * Add "Estimated shipping costs" in the minicart * -->
	<!-- ************************************************** -->
	
	<!-- * Edit controller file * -->
	<file name="catalog/controller/module/cart.php">
		<!-- * Load language file * -->
		<operation>
			<search position="after"><![CDATA[
				public function index() {
			]]></search>
			<add><![CDATA[
				$this->data = array_merge($this->data, $this->load->language('multiseller/multiseller_physical'));
			]]></add>
		</operation>
		
		<!-- * Estimate shipping costs * -->
		<operation>
			<search position="before"><![CDATA[
				foreach ($this->cart->getProducts() as $product) {
			]]></search>
			<add><![CDATA[
				$low_border = 0.0;
				$high_border = 0.0;
				$total_weight = 0.0;
				$weight_class = 1;
				$sellers = array();
			]]></add>
		</operation>

		<!-- * Fixed shipping * -->
		<operation>
			<search position="after"><![CDATA[
				foreach ($this->cart->getProducts() as $product) {
			]]></search>
			<add><![CDATA[
				if ($product['shipping'] && $this->config->get('msconf_enable_minicart_shipping_estimate')) {
					$seller_id = $this->MsLoader->MsProduct->getSellerId($product['product_id']);
					$shipping_type = $this->MsLoader->MsShipping->getSellerShippingType($seller_id);
					// Fixed Shipping
					if ($shipping_type == MsShipping::SHIPPING_TYPE_FIXED) {
						$productShippingMethods = $this->MsLoader->MsShipping->getProductShippingMethods($product['product_id']);
						
						if (!empty($productShippingMethods)) {
							//$min = $this->currency->convert($productShippingMethods[0]['cost'] * $product['quantity'], $productShippingMethods[0]['currency_code'], $this->currency->getCode());
							$min = $productShippingMethods[0]['cost'] * $product['quantity'];
							$max = 0;
							foreach ($productShippingMethods as $productShippingMethod) {
								//if ($this->currency->convert($productShippingMethod['cost'] * $product['quantity'], $productShippingMethod['currency_code'], $this->currency->getCode()) > $max) {
								if ($productShippingMethod['cost'] * $product['quantity'] > $max) {
									//$max = $this->currency->convert($productShippingMethod['cost'] * $product['quantity'], $productShippingMethod['currency_code'], $this->currency->getCode());
									$max = $productShippingMethod['cost'] * $product['quantity'];
								}
								//if ($this->currency->convert($productShippingMethod['cost'] * $product['quantity'], $productShippingMethod['currency_code'], $this->currency->getCode()) < $min) {
								if ($productShippingMethod['cost'] * $product['quantity'] < $min) {
									//$min = $this->currency->convert($productShippingMethod['cost'] * $product['quantity'], $productShippingMethod['currency_code'], $this->currency->getCode());
									$min = $productShippingMethod['cost'] * $product['quantity'];
								}
							}
							$low_border += $min;
							$high_border += $max;
						}
					}
					//Combined shipping
					else if ($shipping_type == MsShipping::SHIPPING_TYPE_COMBINABLE) {
						if (!isset($sellers[$seller_id])){
							$sellers[$seller_id] = array (
								'seller_id' => $seller_id,
								'total_weight' => $this->weight->convert($product['weight'], $product['weight_class_id'], $weight_class),
								'weight_class_id' => $weight_class
							);
						} else {
							$sellers[$seller_id]['total_weight'] += $this->weight->convert($product['weight'], $product['weight_class_id'], $weight_class);
						}
					}
				}

			]]></add>
		</operation>
		
		<!-- * Combined shipping * -->
		<operation>
			<search position="before" offset="1"><![CDATA[
				$this->data['vouchers'] = array();
			]]></search>
			<add><![CDATA[
				foreach ($sellers as $seller) {
					$sellerShippingMethods = $this->MsLoader->MsShipping->getSellerShippingMethods($seller['seller_id']);
					
					if (!empty($sellerShippingMethods)) {
						// Take only full weight steps. Part-steps are rounded to the top
						$total_weight_units = ceil($this->weight->convert($seller['total_weight'], $seller['weight_class_id'], $weight_class) / $this->weight->convert((float)$sellerShippingMethods[0]['weight_step'], (int)$sellerShippingMethods[0]['weight_class_id'], $weight_class));
						//$min = $this->currency->convert($sellerShippingMethods[0]['cost_per_unit'] * $total_weight_units, $sellerShippingMethods[0]['currency_code'], $this->currency->getCode());
						$min = $sellerShippingMethods[0]['cost_per_unit'] * $total_weight_units;
						$max = 0;
						foreach ($sellerShippingMethods as $sellerShippingMethod) {
							$total_weight_units = ceil($this->weight->convert($seller['total_weight'], $seller['weight_class_id'], $weight_class) / $this->weight->convert((float)$sellerShippingMethod['weight_step'], (int)$sellerShippingMethod['weight_class_id'], $weight_class));
							//if ($this->currency->convert($sellerShippingMethod['cost_per_unit'] * $total_weight_units, $sellerShippingMethod['currency_code'], $this->currency->getCode()) > $max) {
							if ($sellerShippingMethod['cost_per_unit'] * $total_weight_units > $max) {
								//$max = $this->currency->convert($sellerShippingMethod['cost_per_unit'] * $total_weight_units, $sellerShippingMethod['currency_code'], $this->currency->getCode());
								$max = $sellerShippingMethod['cost_per_unit'] * $total_weight_units;
							}
							//if ($this->currency->convert($sellerShippingMethod['cost_per_unit'] * $total_weight_units, $sellerShippingMethod['currency_code'], $this->currency->getCode()) < $min) {
							if ($sellerShippingMethod['cost_per_unit'] * $total_weight_units < $min) {
								//$min = $this->currency->convert($sellerShippingMethod['cost_per_unit'] * $total_weight_units, $sellerShippingMethod['currency_code'], $this->currency->getCode());
								$min = $sellerShippingMethod['cost_per_unit'] * $total_weight_units;
							}
						}
						$low_border += $min;
						$high_border += $max;
					}
				}
			]]></add>
		</operation>
		
		<operation>
			<search position="before"><![CDATA[
				$this->data['cart'] = $this->url->link('checkout/cart');
			]]></search>
			<add><![CDATA[
				if ($this->config->get('msconf_enable_minicart_shipping_estimate')) {
					$this->data['high_border'] = $high_border;
					$this->data['estimated_shipping'] = "";
					if ($low_border != $high_border) {
						//$this->data['estimated_shipping'] = $this->currency->format($low_border, $this->currency->getCode(), 1) . " - " . $this->currency->format($high_border, $this->currency->getCode(), 1);
						$this->data['estimated_shipping'] = $this->currency->format($low_border, $this->config->get('config_currency'), 1) . " - " . $this->currency->format($high_border, $this->config->get('config_currency'), 1);
					}
					else if ((float)$high_border != (float)0) {
						//$this->data['estimated_shipping'] = $this->currency->format($high_border, $this->currency->getCode(), 1);
						$this->data['estimated_shipping'] = $this->currency->format($high_border, $this->config->get('config_currency'), 1);
					}
				}
			]]></add>
		</operation>
	</file>
	
	<!-- * Edit view file * -->
	<file name="catalog/view/theme/&themeFolder;/template/module/cart.tpl">
		<operation>
			<search position="after" offset="5"><![CDATA[
				<?php foreach ($totals as $total) { ?>
			]]></search>
			<add><![CDATA[
				<?php if (isset($estimated_shipping)) { ?>
					<tr>
						<td class="right"><b><?php echo $ms_cart_estimated_shipping; ?></b></td>
						<td class="right"><?php echo $estimated_shipping; ?></td>
					</tr>
					<tr>
						<td class="right" colspan="2"><?php echo $ms_cart_shipping_varies;?></td>
					</tr>
				<?php } ?>
			]]></add>
		</operation>
	</file>
	
	<!-- **************************************************************************** -->
	<!-- * Change the controller for shipping method selection (Step 4 of checkout) * -->
	<!-- **************************************************************************** -->
	
	<!-- * Edit view file * -->
	<file name="catalog/view/theme/&themeFolder;/template/checkout/checkout.tpl">
		<!-- * Replace with new checkout * -->
		<operation>
			<search position="replace"><![CDATA[
				url: 'index.php?route=checkout/shipping_method',
			]]></search>
			<add><![CDATA[
				url: 'index.php?route=checkout/multiseller_shipping_method',
			]]></add>
		</operation>
		
		<!-- * Replace with new validation function * -->
		<operation>
			<search position="replace"><![CDATA[
				url: 'index.php?route=checkout/shipping_method/validate',
			]]></search>
			<add><![CDATA[
				url: 'index.php?route=checkout/multiseller_shipping_method/validate',
			]]></add>
		</operation>
		
		<!-- * Send additional data through POST * -->
		<operation>
			<search position="replace"><![CDATA[
				data: $('#shipping-method input[type=\'radio\']:checked, #shipping-method textarea'),
			]]></search>
			<add><![CDATA[
				data: $('#shipping-method input[type=\'radio\']:checked, #shipping-method input[type=\'hidden\'], #shipping-method textarea'),
			]]></add>
		</operation>
	</file>
	
	<!-- * Add file with styles in controller file * -->
	<file name="catalog/controller/checkout/checkout.php">
		<operation>
			<search position="after"><![CDATA[
				public function index() {
			]]></search>
			<add><![CDATA[
				$this->MsLoader->MsHelper->addStyle('multiseller_physical');
			]]></add>
		</operation>
	</file>
	
	<!-- ********************************************* -->
	<!-- ********************************************* -->
	<!-- ** Add the transaction records and balance ** -->
	<!-- ********************************************* -->
	<!-- ********************************************* -->
	
	<!-- ************************************************************************************* -->
	<!-- * Change the checkout order data model to add info and balance records for shipping * -->
	<!-- ************************************************************************************* -->
	
	<file name="catalog/controller/checkout/confirm.php">
		<!-- * Add shipping method data to send it to new order * -->
		<operation>
			<search position="before"><![CDATA[
				$this->session->data['order_id'] = $this->model_checkout_order->addOrder($data);
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['shipping_methods'])) {
					$data['shipping_methods'] = $this->session->data['shipping_methods'];
				}
				if (isset($this->session->data['seller_shipping_methods'])) {
					$data['seller_shipping_methods'] = $this->session->data['seller_shipping_methods'];
				}
			]]></add>
		</operation>
		
		<!-- * Add shippable parameter of the product * -->
		<operation>
			<search position="before"><![CDATA[
				'product_id' => $product['product_id'],
			]]></search>
			<add><![CDATA[
				'shippable' => $product['shipping'],
			]]></add>
		</operation>
		
		<!-- * Remove validation for single shipping method * -->
		<operation>
			<search position="before"><![CDATA[
				if (!isset($this->session->data['shipping_method'])) {
			]]></search>
			<add><![CDATA[
				/*
			]]></add>
		</operation>
		
		<operation>
			<search position="after" offset="2"><![CDATA[
				if (!isset($this->session->data['shipping_method'])) {
			]]></search>
			<add><![CDATA[
				*/
			]]></add>
		</operation>
	</file>
	
	<!-- * Edit checkout order model file (after multiseller.xml has edited it) * -->
	<file name="catalog/model/checkout/order.php">
		<!-- * When creating a new order, add record to the ms_order_shipping and ms_order_product_shipping/ms_order_seller_shipping tables * -->
		<operation>
			<search position="before"><![CDATA[
				$this->db->query("INSERT INTO " . DB_PREFIX . "order_product SET order_id = '" . (int)$order_id . "', product_id = '" . (int)$product['product_id'] . "', name = '" . $this->db->escape($product['name']) . "', model = '" . $this->db->escape($product['model']) . "', quantity = '" . (int)$product['quantity'] . "', price = '" . (float)$product['price'] . "', total = '" . (float)$product['total'] . "', tax = '" . (float)$product['tax'] . "', reward = '" . (int)$product['reward'] . "'");
			]]></search>
			<add><![CDATA[
				if ($product['shippable']) {
					$seller_id = $this->MsLoader->MsProduct->getSellerId($product['product_id']);
					$shipping_type = $this->MsLoader->MsShipping->getSellerShippingType($seller_id);
					
					$order_shipping_entry = $this->MsLoader->MsShipping->getOrderShippingType($order_id, $seller_id);
					if ($order_shipping_entry == MsShipping::SHIPPING_TYPE_NOT_DEFINED) {
						$this->MsLoader->MsShipping->createOrderShipping(array(
							'shipping_type' => (int)$shipping_type,
							'order_id' => (int)$order_id,
							'seller_id' => (int)$seller_id
						));
					}
					
					$this->MsLoader->MsShipping->createOrderProductShippable(array(
						'shippable' => (int)$product['shippable'],
						'order_id' => (int)$order_id,
						'product_id' => (int)$product['product_id']
					));
					
					// Get default language
					$query = $this->db->query("SELECT `value` FROM " . DB_PREFIX . "setting WHERE `key` = 'config_language' AND store_id = '" . (int)$this->config->get('config_store_id') . "' ORDER BY store_id ASC");
					$default_language = $this->MsLoader->MsHelper->getLanguageId($query->row['value']);
					
					// Fixed shipping
					if ($shipping_type == MsShipping::SHIPPING_TYPE_FIXED) {
						//$productShipping = $this->MsLoader->MsShipping->getOrderProductShipping((int)$order_id, $product['product_id']);
						//$productShipping = $this->MsLoader->MsShipping->getProductShippingMethods($product['product_id']);
						//$shipping_method_name = $this->MsLoader->MsShippingMethod->getShippingMethodDescriptions($productShipping[(int)$data['shipping_methods'][$product['product_id']]['shipping_method_id']])[$default_language]['name'];
						
						$shipping_method_descriptions = $this->MsLoader->MsShippingMethod->getShippingMethodDescriptions((int)$data['shipping_methods'][$product['product_id']]['shipping_method_id']);
						$shipping_method_name = $shipping_method_descriptions[$default_language]['name'];
						
						$this->db->query("
							INSERT INTO `" . DB_PREFIX . "ms_order_product_shipping` SET
								`shipping_method_name` = '" . $shipping_method_name . "',
								`shipping_cost` = '" . $this->currency->convert((float)$data['shipping_methods'][$product['product_id']]['cost_unformatted'], $this->currency->getCode(), $this->config->get('config_currency')) . "',
								`product_id` = '" . (int)$product['product_id'] . "',
								`order_id` = '" . (int)$order_id . "',
								`seller_id` = '" . (int)$seller_id . "'");
					// Combined shipping
					} else if ($shipping_type == MsShipping::SHIPPING_TYPE_COMBINABLE) {
						//$sellerShipping = $this->MsLoader->MsShipping->getOrderSellerShipping((int)$order_id, $seller_id);
						//$sellerShipping = $this->MsLoader->MsShipping->getSellerShippingMethods($seller_id);
						//$shipping_method_name = $this->MsLoader->MsShippingMethod->getShippingMethodDescriptions($sellerShipping[(int)$data['seller_shipping_methods'][$seller_id]['shipping_method_id']])[$default_language]['name'];
						
						$shipping_method_descriptions = $this->MsLoader->MsShippingMethod->getShippingMethodDescriptions((int)$data['seller_shipping_methods'][$seller_id]['shipping_method_id']);
						$shipping_method_name = $shipping_method_descriptions[$default_language]['name'];
						
						$this->db->query("
							INSERT INTO `" . DB_PREFIX . "ms_order_seller_shipping` SET
								`shipping_method_name` = '" . $shipping_method_name . "',
								`shipping_cost` = '" . $this->currency->convert((float)$data['seller_shipping_methods'][$seller_id]['cost_unformatted'], $this->currency->getCode(), $this->config->get('config_currency')) . "',
								`order_id` = '" . (int)$order_id . "',
								`seller_id` = '" . (int)$seller_id . "'");
					}
				}
			]]></add>
		</operation>
		
		<!-- * Add the shipping costs for each product of the order and add balance records (in two places) for credit (payment) * -->
		<operation>
			<search position="after" offset="2"><![CDATA[
				if (in_array($order_status_id, $this->config->get('msconf_credit_order_statuses'))) {
			]]></search>
			<add><![CDATA[
				if ($this->MsLoader->MsShipping->getOrderProductShippable($order_id, $order_product['product_id'])) {
					$this->load->language('multiseller/multiseller_physical');
					$seller_id = $this->MsLoader->MsProduct->getSellerId($order_product['product_id']);
					//$shipping_type = $this->MsLoader->MsShipping->gtSellerShippingType($seller_id);
					$shipping_type = $this->MsLoader->MsShipping->getOrderShippingType($order_id, $seller_id);
					
					// Fixed shipping
					if ($shipping_type == MsShipping::SHIPPING_TYPE_FIXED) {
					
						$balance_shipping_entry = $this->MsLoader->MsBalance->getBalanceEntry(
							array(
								'seller_id' => $seller_id,
								'product_id' => $order_product['product_id'],
								'order_id' => $order_id,
								'balance_type' => MsBalance::MS_BALANCE_TYPE_SHIPPING
							)
						);
					
						if (!$balance_shipping_entry) {
							$orderProductShipping = $this->MsLoader->MsShipping->getOrderProductShipping($order_id, $order_product['product_id']);
							
							$this->MsLoader->MsBalance->addBalanceEntry(
								$seller_id,
								array(
									'order_id' => $order_product['order_id'],
									'product_id' => $order_product['product_id'],
									'balance_type' => MsBalance::MS_BALANCE_TYPE_SHIPPING,
									'amount' => $this->currency->convert($orderProductShipping['shipping_cost'], $this->currency->getCode(), $this->config->get('config_currency')),
									'description' => sprintf($this->language->get('ms_transaction_shipping'), ($order_product['quantity'] > 1 ? $order_product['quantity'] . ' x ' : '')  . $order_product['name'])
								)
							);
						} else {
							// send order status change mails
						}
					// Combined shipping
					} else if ($shipping_type == MsShipping::SHIPPING_TYPE_COMBINABLE) {
					
						$balance_shipping_entry = $this->MsLoader->MsBalance->getBalanceEntry(
							array(
								'seller_id' => $seller_id,
								'order_id' => $order_id,
								'balance_type' => MsBalance::MS_BALANCE_TYPE_SHIPPING
							)
						);
					
						if (!$balance_shipping_entry) {
							$orderSellerShipping = $this->MsLoader->MsShipping->getOrderSellerShipping($order_id, $seller_id);
							$seller_name = $this->MsLoader->MsSeller->getSellerName($seller_id);
							
							$this->MsLoader->MsBalance->addBalanceEntry(
								$seller_id,
								array(
									'order_id' => $order_product['order_id'],
									'product_id' => $order_product['product_id'],
									'balance_type' => MsBalance::MS_BALANCE_TYPE_SHIPPING,
									'amount' => $this->currency->convert($orderSellerShipping['shipping_cost'], $this->currency->getCode(), $this->config->get('config_currency')),
									'description' => sprintf($this->language->get('ms_transaction_shipping_order'), $order_product['order_id'], $seller_name)
								)
							);
						}
					}
				}
			]]></add>
		</operation>
		
		<!-- * Add balance records (in two places) for debit (refund) * -->
		<operation>
			<search position="after" offset="1"><![CDATA[
				} else if (in_array($order_status_id, $this->config->get('msconf_debit_order_statuses'))) {
			]]></search>
			<add><![CDATA[
				if ($this->MsLoader->MsShipping->getOrderProductShippable($order_id, $order_product['product_id'])) {
					$seller_id = $this->MsLoader->MsProduct->getSellerId($order_product['product_id']);
					//$shipping_type = $this->MsLoader->MsShipping->getSellerShippingType($seller_id);
					$shipping_type = $this->MsLoader->MsShipping->getOrderShippingType($order_id, $seller_id);
					
					// Fixed shipping
					if ($shipping_type == MsShipping::SHIPPING_TYPE_FIXED) {
					
						$refund_shipping_entry = $this->MsLoader->MsBalance->getBalanceEntry(
							array(
								'seller_id' => $seller_id,
								'product_id' => $order_product['product_id'],
								'order_id' => $order_id,
								'balance_type' => MsBalance::MS_BALANCE_TYPE_SHIPPING_REFUND
							)
						);
					
						if (!$refund_shipping_entry) {
							$balance_shipping_entry = $this->MsLoader->MsBalance->getBalanceEntry(
								array(
									'seller_id' => $seller_id,
									'product_id' => $order_product['product_id'],
									'order_id' => $order_id,
									'balance_type' => MsBalance::MS_BALANCE_TYPE_SHIPPING
								)
							);
					
							if ($balance_shipping_entry) {
								$this->MsLoader->MsBalance->addBalanceEntry(
									$balance_shipping_entry['seller_id'],
									array(
										'order_id' => $balance_shipping_entry['order_id'],
										'product_id' => $balance_shipping_entry['product_id'],
										'balance_type' => MsBalance::MS_BALANCE_TYPE_SHIPPING_REFUND,
										'amount' => -1 * $balance_shipping_entry['amount'],
										'description' => sprintf($this->language->get('ms_transaction_shipping_refund'), ($order_product['quantity'] > 1 ? $order_product['quantity'] . ' x ' : '')  . $order_product['name'])
									)
								);
								// ToDo: Send refund mails
								// $this->MsLoader->MsMail->sendOrderMails($order_id);
							} else {

							}
						}
					// Combined shipping
					} else if ($shipping_type == MsShipping::SHIPPING_TYPE_COMBINABLE) {
					
						$refund_shipping_entry = $this->MsLoader->MsBalance->getBalanceEntry(
							array(
								'seller_id' => $seller_id,
								'order_id' => $order_id,
								'balance_type' => MsBalance::MS_BALANCE_TYPE_SHIPPING_REFUND
							)
						);
						
						if (!$refund_shipping_entry) {
							$balance_shipping_entry = $this->MsLoader->MsBalance->getBalanceEntry(
								array(
									'seller_id' => $seller_id,
									'order_id' => $order_id,
									'balance_type' => MsBalance::MS_BALANCE_TYPE_SHIPPING
								)
							);
					
							if ($balance_shipping_entry) {
								$seller_name = $this->MsLoader->MsSeller->getSellerName($seller_id);
								$this->MsLoader->MsBalance->addBalanceEntry(
									$balance_shipping_entry['seller_id'],
									array(
										'order_id' => $balance_shipping_entry['order_id'],
										'product_id' => $balance_shipping_entry['product_id'],
										'balance_type' => MsBalance::MS_BALANCE_TYPE_SHIPPING_REFUND,
										'amount' => -1 * $balance_shipping_entry['amount'],
										'description' => sprintf($this->language->get('ms_transaction_shipping_refund_order'), $balance_shipping_entry['order_id'], $seller_name)
									)
								);
								// ToDo: Send refund mails
								// $this->MsLoader->MsMail->sendOrderMails($order_id);
							} else {

							}
						}
					}
				}
			]]></add>
		</operation>
	</file>
	
	<!-- ***************************************************************************************************************************************** -->
	<!-- * Change the checkout sale data model in the backend to add info and balance records for shipping in case of manual order status change * -->
	<!-- ***************************************************************************************************************************************** -->
	
	<file name="&adminFolder;/model/sale/order.php">
		<!-- * Add the shipping costs for each product of the order and add balance records (in two places) for credit (payment) * -->
		<operation>
			<search position="after" offset="3"><![CDATA[
				if (in_array($data['order_status_id'], $this->config->get('msconf_credit_order_statuses'))) {
			]]></search>
			<add><![CDATA[
				if ($this->MsLoader->MsShipping->getOrderProductShippable($order_id, $order_product['product_id'])) {
					$this->load->language('multiseller/multiseller_physical');
					$seller_id = $this->MsLoader->MsProduct->getSellerId($order_product['product_id']);
					$shipping_type = $this->MsLoader->MsShipping->getSellerShippingType($seller_id);
					
					// Fixed shipping
					if ($shipping_type == MsShipping::SHIPPING_TYPE_FIXED) {
						
						$balance_shipping_entry = $this->MsLoader->MsBalance->getBalanceEntry(
							array(
								'seller_id' => $seller_id,
								'product_id' => $order_product['product_id'],
								'order_id' => $order_id,
								'balance_type' => MsBalance::MS_BALANCE_TYPE_SHIPPING
							)
						);
					
						if (!$balance_shipping_entry) {
							$orderProductShipping = $this->MsLoader->MsShipping->getOrderProductShipping($order_id, $order_product['product_id']);
							
							$this->MsLoader->MsBalance->addBalanceEntry(
								$seller_id,
								array(
									'order_id' => $order_product['order_id'],
									'product_id' => $order_product['product_id'],
									'balance_type' => MsBalance::MS_BALANCE_TYPE_SHIPPING,
									'amount' => $this->currency->convert($orderProductShipping['shipping_cost'], $this->currency->getCode(), $this->config->get('config_currency')),
									'description' => sprintf($this->language->get('ms_transaction_shipping'), ($order_product['quantity'] > 1 ? $order_product['quantity'] . ' x ' : '')  . $order_product['name'])
								)
							);
						} else {
						
						}
					// Combined shipping
					} else if ($shipping_type == MsShipping::SHIPPING_TYPE_COMBINABLE) {
					
						$balance_shipping_entry = $this->MsLoader->MsBalance->getBalanceEntry(
							array(
								'seller_id' => $seller_id,
								'order_id' => $order_id,
								'balance_type' => MsBalance::MS_BALANCE_TYPE_SHIPPING
							)
						);
					
						if (!$balance_shipping_entry) {
							$orderSellerShipping = $this->MsLoader->MsShipping->getOrderSellerShipping($order_id, $seller_id);
							$seller_name = $this->MsLoader->MsSeller->getSellerName($seller_id);
							
							$this->MsLoader->MsBalance->addBalanceEntry(
								$seller_id,
								array(
									'order_id' => $order_product['order_id'],
									'product_id' => $order_product['product_id'],
									'balance_type' => MsBalance::MS_BALANCE_TYPE_SHIPPING,
									'amount' => $this->currency->convert($orderSellerShipping['shipping_cost'], $this->currency->getCode(), $this->config->get('config_currency')),
									'description' => sprintf($this->language->get('ms_transaction_shipping_order'), $order_product['order_id'], $seller_name)
								)
							);
						}
					}
				}
			]]></add>
		</operation>
		
		<!-- * Add balance records (in two places) for debit (refund) * -->
		<operation>
			<search position="after" offset="1"><![CDATA[
				} else if (in_array($data['order_status_id'], $this->config->get('msconf_debit_order_statuses'))) {
			]]></search>
			<add><![CDATA[
				if ($this->MsLoader->MsShipping->getOrderProductShippable($order_id, $order_product['product_id'])) {
					$seller_id = $this->MsLoader->MsProduct->getSellerId($order_product['product_id']);
					$shipping_type = $this->MsLoader->MsShipping->getSellerShippingType($seller_id);
				
					// Fixed shipping
					if ($shipping_type == MsShipping::SHIPPING_TYPE_FIXED) {
						
						$refund_shipping_entry = $this->MsLoader->MsBalance->getBalanceEntry(
							array(
								'seller_id' => $seller_id,
								'product_id' => $order_product['product_id'],
								'order_id' => $order_id,
								'balance_type' => MsBalance::MS_BALANCE_TYPE_SHIPPING_REFUND
							)
						);
						
						if (!$refund_shipping_entry) {
							$balance_shipping_entry = $this->MsLoader->MsBalance->getBalanceEntry(
								array(
									'seller_id' => $seller_id,
									'product_id' => $order_product['product_id'],
									'order_id' => $order_id,
									'balance_type' => MsBalance::MS_BALANCE_TYPE_SHIPPING
								)
							);
					
							if ($balance_shipping_entry) {
								$this->MsLoader->MsBalance->addBalanceEntry(
									$balance_shipping_entry['seller_id'],
									array(
										'order_id' => $balance_shipping_entry['order_id'],
										'product_id' => $balance_shipping_entry['product_id'],
										'balance_type' => MsBalance::MS_BALANCE_TYPE_SHIPPING_REFUND,
										'amount' => -1 * $balance_shipping_entry['amount'],
										'description' => sprintf($this->language->get('ms_transaction_shipping_refund'),  ($order_product['quantity'] > 1 ? $order_product['quantity'] . ' x ' : '')  . $order_product['name'])
									)
								);
								// ToDo: Send refund mails
								// $this->MsLoader->MsMail->sendOrderMails($order_id);
							} else {
								// send order status change mails
							}
						}
					// Combined shipping
					} else if ($shipping_type == MsShipping::SHIPPING_TYPE_COMBINABLE) {
					
						$refund_shipping_entry = $this->MsLoader->MsBalance->getBalanceEntry(
							array(
								'seller_id' => $seller_id,
								'order_id' => $order_id,
								'balance_type' => MsBalance::MS_BALANCE_TYPE_SHIPPING_REFUND
							)
						);
						
						if (!$refund_shipping_entry) {
							$balance_shipping_entry = $this->MsLoader->MsBalance->getBalanceEntry(
								array(
									'seller_id' => $seller_id,
									'order_id' => $order_id,
									'balance_type' => MsBalance::MS_BALANCE_TYPE_SHIPPING
								)
							);
					
							if ($balance_shipping_entry) {
								$seller_name = $this->MsLoader->MsSeller->getSellerName($seller_id);
								$this->MsLoader->MsBalance->addBalanceEntry(
									$balance_shipping_entry['seller_id'],
									array(
										'order_id' => $balance_shipping_entry['order_id'],
										'product_id' => $balance_shipping_entry['product_id'],
										'balance_type' => MsBalance::MS_BALANCE_TYPE_SHIPPING_REFUND,
										'amount' => -1 * $balance_shipping_entry['amount'],
										'description' => sprintf($this->language->get('ms_transaction_shipping_refund_order'), $balance_shipping_entry['order_id'], $seller_name)
									)
								);
								// ToDo: Send refund mails
								// $this->MsLoader->MsMail->sendOrderMails($order_id);
							} else {

							}
						}
					}
				}
			]]></add>
		</operation>
	</file>
	
	<!-- * Unset shipping methods after checkout succesfully finished * -->
	<file name="catalog/controller/checkout/success.php">
		<operation>
			<search position="after"><![CDATA[
				unset($this->session->data['shipping_methods']);
			]]></search>
			<add><![CDATA[
				unset($this->session->data['seller_shipping_methods']);
			]]></add>
		</operation>
	</file>
	
	<!-- **************************************************************** -->
	<!-- ******************** MultiMerch Core Mods ********************** -->
	<!-- **************************************************************** -->
	
	<!-- ********************** -->
	<!-- ******* MODELS ******* -->
	<!-- ********************** -->

	<!-- **************************************************** -->
	<!-- * Alter MsBalance model, add shipping type balance * -->
	<!-- **************************************************** -->
	
	<file name="system/library/msbalance.php">
		<operation>
			<search position="after"><![CDATA[
				const MS_BALANCE_TYPE_RECURRING = 7;
			]]></search>
			<add><![CDATA[
				// Shipping
				const MS_BALANCE_TYPE_SHIPPING = 20;
				const MS_BALANCE_TYPE_SHIPPING_REFUND = 21;
			]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[
				AND balance_type = " . (int)MsBalance::MS_BALANCE_TYPE_SALE . "
			]]></search>
			<add><![CDATA[
				AND (balance_type = " . (int)MsBalance::MS_BALANCE_TYPE_SALE . "
 				OR balance_type = " . (int)MsBalance::MS_BALANCE_TYPE_SHIPPING . ")
			]]></add>
		</operation>
	</file>

	<!-- ******************************************* -->
	<!-- * Alter MsSeller model, add shipping type * -->
	<!-- ******************************************* -->
	
	<file name="system/library/msseller.php">
		<operation>
			<search position="after"><![CDATA[
				avatar = '" . $this->db->escape($avatar) . "',
			]]></search>
			<add><![CDATA[
				shipping_type = 0,
			]]></add>
		</operation>

		<operation>
			<search position="before"><![CDATA[
				IFNULL(SUM(mp.number_sold), 0) as 'total_sales'
			]]></search>
			<add><![CDATA[
				ms.shipping_type as 'ms.shipping_type',
			]]></add>
		</operation>
	</file>

	<!-- *********************************************************************************** -->
	<!-- * Alter MsProduct model, add shipping parameters to the product and other changes * -->
	<!-- *********************************************************************************** -->
	
	<file name="system/library/msproduct.php">
		<!-- * Add shipping parameters to the product. Twice, both in createProduct and editProduct * -->
		<operation>
			<search position="after"><![CDATA[
				shipping = " . (int)$data['product_enable_shipping'] . ",
			]]></search>
			<add><![CDATA[
				length = '" . (isset($data['shipping_length']) && !empty($data['shipping_length']) ? (float)$data['shipping_length'] : 'NULL') . "',
				width = '" . (isset($data['shipping_width']) && !empty($data['shipping_width']) ? (float)$data['shipping_width'] : 'NULL') . "',
				height = '" . (isset($data['shipping_height']) && !empty($data['shipping_height']) ? (float)$data['shipping_height'] : 'NULL') . "',
				weight = '" . (isset($data['shipping_weight']) && !empty($data['shipping_weight']) ? (float)$data['shipping_weight'] : 'NULL') . "',
				weight_class_id = '" . (isset($data['weight_class_id']) && !empty($data['weight_class_id']) ? (float)$data['weight_class_id'] : 'NULL') . "',
				length_class_id = '" . (isset($data['length_class_id']) && !empty($data['length_class_id']) ? (float)$data['length_class_id'] : 'NULL') . "',
			]]></add>
		</operation>

		<!-- * Save product shipping methods. Twice, both in createProduct and editProduct * -->
		<operation>
			<search position="before"><![CDATA[
				// specials
			]]></search>
			<add><![CDATA[
				if (isset($data['ms_shipping_methods'])) {
					$this->db->query("DELETE FROM " . DB_PREFIX . "ms_product_shipping_method WHERE product_id = '" . (int)$product_id . "'");
					
					$this->load->model('localisation/currency');
					$currencies = $this->model_localisation_currency->getCurrencies();
					foreach ($data['ms_shipping_methods'] as $ms_shipping_method) {
						/*foreach ($currencies as $currency) {
							if ($currency['currency_id'] == $ms_shipping_method['currency_id']) {
								$ms_shipping_method['currency_code'] = $currency['code'];
							}
						}*/
						$this->MsLoader->MsShipping->createProductShippingMethod($product_id, $ms_shipping_method);
					}
				}
			]]></add>
		</operation>

		<!-- * Delete existing shipping methods, in editProduct * -->
		<!--<operation>
			<search position="before" index="1"><![CDATA[
				if (isset($data['ms_shipping_methods'])) {
			]]></search>
			<add><![CDATA[
				$this->db->query("DELETE FROM " . DB_PREFIX . "ms_product_shipping_method WHERE product_id = '" . (int)$product_id . "'");
			]]></add>
		</operation>-->
	</file>
	
	<!-- ************************* -->
	<!-- ******* TEMPLATES ******* -->
	<!-- ************************* -->
	
	<!-- ************************************************************************************************* -->
	<!-- * Alter Dashboard template, add shipping settings link, and shipping methods to the orders list * -->
	<!-- ************************************************************************************************* -->
	
	<file name="catalog/view/theme/&themeFolder;/template/multiseller/account-dashboard.tpl">
		<!-- Add shipping settings link -->
		<operation>
			<search position="before"><![CDATA[
				<a href="<?php echo $this->url->link('seller/account-order', '', 'SSL'); ?>">
			]]></search>
			<add><![CDATA[
				<a href="<?php echo $this->url->link('seller/account-shipping-settings', '', 'SSL'); ?>">
					<img src="catalog/view/theme/<?php echo $this->config->get('config_template'); ?>/image/ms-woodbox.png" />
					<span><?php echo $ms_account_dashboard_nav_shipping_settings; ?></span>
				</a>
			]]></add>
		</operation>
		
		<!-- Add shipping methods to the orders list -->
		<operation>
			<search position="before"><![CDATA[
				<td><?php echo $ms_date_created; ?></td>
			]]></search>
			<add><![CDATA[
				<td><?php echo $ms_account_orders_shipping; ?></td>
			]]></add>
		</operation>
		
		<operation>
			<search position="before"><![CDATA[
				<td><?php echo $order['date_created']; ?></td>
			]]></search>
			<add><![CDATA[
				<td class="left products">
				<?php foreach ($order['shippings'] as $shipping) { ?>
				<p>
					<span class="name"><?php echo $shipping['name']; ?></span>
					<span class="total"><?php echo $this->currency->format($shipping['shipping_cost'], $this->config->get('config_currency')); ?></span> <br />
				</p>
				<?php } ?>
				</td>
			]]></add>
		</operation>
	</file>

	<!-- ********************************************************************* -->
	<!-- * Alter Product form template, add shipping tab, some minor changes * -->
	<!-- ********************************************************************* -->
	
	<file name="catalog/view/theme/&themeFolder;/template/multiseller/account-product-form.tpl">
		<!-- Add shipping tab -->
		<operation>
			<search position="after"><![CDATA[
				<a href="#tab-general"><?php echo $ms_account_product_tab_general; ?></a>
			]]></search>
			<add><![CDATA[
				<?php if ($msconf_enable_shipping > 0) { ?>
					<a name="shipping_tab" id="shipping_tab" href="#tab-shipping" style="display:none"><?php echo $ms_account_product_tab_shipping; ?></a>
				<?php } ?>
			]]></add>
		</operation>

		<operation>
			<search position="before"><![CDATA[
				<!-- specials tab -->
			]]></search>
			<add><![CDATA[
				<?php if ($msconf_enable_shipping > 0) { ?>
					<div id="tab-shipping" class="tab-content"></div>
				<?php } ?>
			]]></add>
		</operation>
		
		<operation>
			<search position="before"><![CDATA[
				var msGlobals = {
			]]></search>
			<add><![CDATA[
				$('#tab-shipping').load('index.php?route=seller/tab-shipping/getForm&product_id=<?php echo $product['product_id']; ?>');
			]]></add>
		</operation>
		
		<!-- Make downloads required -->
		<operation>
			<search position="replace"><![CDATA[
				<td><?php if ($msconf_downloads_limits[0] > 0) { ?><span class="required">*</span><?php } ?> <?php echo $ms_account_product_download; ?></td>
			]]></search>
			<add><![CDATA[
				<td><?php if ( ($msconf_enable_shipping == 2 && $product['shipping'] != 1) && ($msconf_downloads_limits[0] > 0) ) { ?><span class="required" name="downloads_required" id="downloads_required">*</span><?php } ?> <?php echo $ms_account_product_download; ?></td>
			]]></add>
		</operation>
		
		<!-- Make quantity required for physical products -->
		<operation>
			<search position="replace" index="1"><![CDATA[
				<td><?php echo $ms_account_product_quantity; ?></td>
			]]></search>
			<add><![CDATA[
				<td> <span class="required">*</span> <?php echo $ms_account_product_quantity; ?> </td>
			]]></add>
		</operation>
		
		<!-- Add global variables to check download limits -->
		<operation>
			<search position="after"><![CDATA[
				formNotice: '<?php echo htmlspecialchars($ms_error_form_notice, ENT_QUOTES, "UTF-8"); ?>',
			]]></search>
			<add><![CDATA[
				downloadsLimitApplication: '<?php echo $msconf_download_limit_applies; ?>',
				downloadsLimit: '<?php echo $msconf_downloads_limits[0]; ?>',
			]]></add>
		</operation>
	</file>
	
	<!-- ************************************************************************ -->
	<!-- * Change the product form tab (Shipping selection) in product template * -->
	<!-- ************************************************************************ -->
	
	<file name="catalog/view/theme/&themeFolder;/template/multiseller/account-product-form.tpl">
		<operation>
			<search position="replace" offset="13"><![CDATA[
				<?php if ($msconf_enable_shipping == 2) { ?>
			]]></search>
			<add><![CDATA[
				
			]]></add>
		</operation>
		
		<operation>
			<search position="after"><![CDATA[
				<tr><td colspan="2"><h3><?php echo $ms_account_product_price_attributes; ?></h3></td></tr>
			]]></search>
			<add><![CDATA[
				<?php if ($msconf_enable_shipping == 2) { ?>
				<tr>
					<td> <span class="required">*</span> <?php echo $ms_account_product_shipping_way; ?></td>
					<td>
						<input type="radio" name="product_enable_shipping" value="1" <?php if($product['shipping'] == 1) { ?> checked="checked" <?php } ?>/>
						<?php echo $ms_shipping_way_shippable; ?>
						<input type="radio" name="product_enable_shipping" value="0" <?php if($product['shipping'] == 0) { ?> checked="checked" <?php } ?>/>
						<?php echo $ms_shipping_way_digital; ?>
						<p class="ms-note"><?php echo $ms_account_product_enable_shipping_note; ?></p>
						<p class="ms-note" name="shipping_reminder"><?php echo $ms_account_product_shipping_way_reminder; ?></p>
						<p class="error" id="error_product_enable_shipping"></p>
					</td>
				</tr>
				<?php } ?>
			]]></add>
		</operation>
	</file>
	
	<!-- ************************************************** -->
	<!-- * Alter order template, add shipping information * -->
	<!-- ************************************************** -->
	
	<file name="catalog/view/theme/&themeFolder;/template/multiseller/account-order.tpl">
		<operation>
			<search position="before"><![CDATA[
				<td class="medium"><?php echo $ms_date_created; ?></td>
			]]></search>
			<add><![CDATA[
				<td><?php echo $ms_account_orders_shipping; ?></td>
			]]></add>
		</operation>

		<operation>
			<search position="after"><![CDATA[
				<tr class="filter">
			]]></search>
			<add><![CDATA[
				<td></td>
			]]></add>
		</operation>

		<operation>
			<search position="before"><![CDATA[
				{ "mData": "date_created" },
			]]></search>
			<add><![CDATA[
				{ "mData": "shipping_data", "bSortable": false, "sClass": "left products" },
			]]></add>
		</operation>
	</file>

	<!-- *************************** -->
	<!-- ******* CONTROLLERS ******* -->
	<!-- *************************** -->
	
	<!-- ******************** -->
	<!-- * Multiseller base * -->
	<!-- ******************** -->
	
	<file name="&adminFolder;/controller/module/multiseller.php">
		<!-- Add version -->
		<operation>
			<search position="replace"><![CDATA[
				private $_versions = array("2.2", "2.3", "3.0", "4.0", "4.1", "4.2", "4.3");
			]]></search>
			<add><![CDATA[
				private $_versions = array("4.0", "4.1", "4.2", "4.3", "SE");
			]]></add>
		</operation>
		
		<!-- Add shipping method page to the controllers list for permissions -->
		<operation>
			<search position="after"><![CDATA[
				private $_controllers = array(
			]]></search>
			<add><![CDATA[
				"multiseller/shipping-method",
			]]></add>
		</operation>

		<!-- Enable shipping to be selected by sellers by default -->
		<operation>
			<search position="replace"><![CDATA[
				"msconf_enable_shipping" => 0,
			]]></search>
			<add><![CDATA[
				"msconf_enable_shipping" => 2,
			]]></add>
		</operation>
		
		<!-- Provide buyer info in the mails by default -->
		<operation>
			<search position="replace"><![CDATA[
				"msconf_provide_buyerinfo" => 0
			]]></search>
			<add><![CDATA[
				"msconf_provide_buyerinfo" => 1
			]]></add>
		</operation>
		
		<!-- Add new shipping settings -->
		<operation>
			<search position="replace"><![CDATA[
				"msconf_enable_quantities" => 0,
			]]></search>
			<add><![CDATA[
				"msconf_enable_quantities" => 2,
				"msconf_product_shipping_cost_estimation" => 1,
				"msconf_enable_minicart_shipping_estimate" => 1,
				"msconf_download_limit_applies" => 1,
			]]></add>
		</operation>
	</file>
	
	<!-- ************** -->
	<!-- * Admin core * -->
	<!-- ************** -->
	
	<file name="&adminFolder;/controller/module/multiseller.php">
		<!-- Add language file -->
		<operation>
			<search position="after"><![CDATA[
				parent::__construct($registry);
			]]></search>
			<add><![CDATA[
				$this->data = array_merge($this->data, $this->load->language('multiseller/multiseller_physical'));
			]]></add>
		</operation>
	</file>

	
	<!-- *********** -->
	<!-- * Account * -->
	<!-- *********** -->
	
	<file name="catalog/controller/seller/account.php">
		<!-- Add language and style files -->
		<operation>
			<search position="after"><![CDATA[
				parent::__construct($registry);
			]]></search>
			<add><![CDATA[
				$this->data = array_merge($this->data, $this->load->language('multiseller/multiseller_physical'));
				$this->MsLoader->MsHelper->addStyle('multiseller_physical');
			]]></add>
		</operation>
	</file>

	<!-- ************* -->
	<!-- * Dashboard * -->
	<!-- ************* -->
	
	<file name="catalog/controller/seller/account-dashboard.php">
		<operation>
			<search position="after"><![CDATA[
				foreach ($orders as $order) {
			]]></search>
			<add><![CDATA[
				$total = 0.0;
				$products = $this->MsLoader->MsOrderData->getOrderProducts(array('order_id' => $order['order_id'], 'seller_id' => $seller_id));
				$sellerShipping = $this->MsLoader->MsShipping->getOrderSellerShipping($order['order_id'], $seller_id, 0);
			
				$shippings = array();
				$atLeastOneShippable = false;
				if (empty($sellerShipping)) {
					foreach ($products as $product) {
						// Shippable
						if ($this->MsLoader->MsShipping->getOrderProductShippable($order['order_id'], $product['product_id'])) {
							$atLeastOneShippable = true;
							$productShipping = $this->MsLoader->MsShipping->getOrderProductShipping($order['order_id'], $product['product_id']);
							$shippings[] = array(
								'shipping_cost' => $productShipping['shipping_cost'],
								'name' => $productShipping['shipping_method_name']
								//'name' => $this->MsLoader->MsShippingMethod->getShippingMethodDescriptions($productShipping['product_shipping_method_id'])[$language_id]['name'],
							);
							$total += $productShipping['shipping_cost'];
						// Not shippable
						} else {
							$shippings[] = array(
								'shipping_cost' => "0",
								'name' => "--"
							);
						}
					}
				}
				else {
					$shippings[] = array(
						'shipping_cost' => $sellerShipping['shipping_cost'],
						'name' => $sellerShipping['shipping_method_name']
						//'name' => $this->MsLoader->MsShippingMethod->getShippingMethodDescriptions($sellerShipping['seller_shipping_method_id'])[$language_id]['name'],
					);
					$total += $sellerShipping['shipping_cost'];
				}
			
				$shipped = 0;
				$orderShipping = $this->MsLoader->MsShipping->getOrderShippingTracking($order['order_id'], $seller_id);
				if ($orderShipping) {
					$shipped = $orderShipping['shipped']; // Is shipped already
				}
			]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[
				'products' => $this->MsLoader->MsOrderData->getOrderProducts(array('order_id' => $order['order_id'], 'seller_id' => $seller_id)),
			]]></search>
			<add><![CDATA[
    			'products' => $products,
				'shippings' => $shippings,
				'shippable' => $atLeastOneShippable,
			]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[
				'total' => $this->currency->format($this->MsLoader->MsOrderData->getOrderTotal($order['order_id'], array('seller_id' => $seller_id)), $this->config->get('config_currency'))
			]]></search>
			<add><![CDATA[
    			'total' => $this->currency->format($total + $this->MsLoader->MsOrderData->getOrderTotal($order['order_id'], array('seller_id' => $seller_id)), $this->config->get('config_currency'))
			]]></add>
		</operation>
	</file>
</modification>
